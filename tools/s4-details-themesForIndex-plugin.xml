<?xml version="1.0" encoding="UTF-8"?>
<tool type="plugin">
    <requires>
    [if: ModuleDefined("s4") ]
    	<include src="[module:s4.dir]/tools/s4-requires.xml" nodes="/tool/requires/*" mustexist="true"/>
	[endif]
   </requires>
    <jssrc/>
    <src><![CDATA[
    [if: ModuleDefined("s4") ]
            if (_s4Params.indexsearcher && _s4Params.indexsearcher.enabled && _s4Params.themesearcher && _s4Params.themesearcher.enabled){
            	_s4Params.indexsearcher.searcher.addDetailHandlerDef({
            		"buttonText":  cbInfo.getString('s4.themesearcher.themes'),
            		"buttonImage": Septima.Search.s4Icons.layersIconUri,
            		"handler": Septima.bind(function(result, detailsContent){
					    var promise = new Promise(function(resolve, reject){
	                        var themesResults = _s4Params.themesearcher.searcher.getThemesForDatasource(result.data.datasource).getResults();
	                        var items = [];
	                        for (var i=0;i<themesResults.length;i++){
	                            var themeResult = themesResults[i];
	                        
	                            //var clickFunction = Septima.bind(function(result){
	                            //    result.searcher.toggleTheme(result);
	                            //    if (!result.data.theme.visible){
	                            //        cbKort.events.fireEvent('S4', {type: 'themeHit', theme: result.data});
	                            //    }
	                            //    detailsContent.selectResult(result);
	                            //}, this, themeResult) 
	                        
	                            var themeIcon = jQuery("<img src='" + themeResult.image + "'/>");
	                            //themeIcon.click(clickFunction);
	                            var title = jQuery("<span>" + themeResult.title + "</span>");
	                            //title.click(clickFunction);
	                            
	                            //var detailsIcon = jQuery('<img src="' + Septima.Search.icons.list.detailsIcon + '">');
	                            //detailsIcon.click(clickFunction);
	                            
	                            //items.push({type: 'area', icon: themeIcon, value: title, fixedIcons: [detailsIcon], hoverable: true, clickable: true});
                                items.push({type: 'area', icon: themeIcon, value: title, result: themeResult, clickable: true});
	                        }
	                        
	                        resolve(detailsContent.formatItems(items));
					    });
					    return promise;
            		}, this),
            		isApplicable: Septima.bind(function(result){
            			var themesResults = _s4Params.themesearcher.searcher.getThemesForDatasource(result.data.datasource).getResults();
            			return themesResults.length > 0;
            		}, this),
            		getbuttonText: function(result){
            			var text = cbInfo.getString('s4.themesearcher.themesrelated');
            			return text + " " + result.title;
            		}
            	});
            }            
    	Septima.Log.trace({
            eventCategory: 's4',
            eventAction: 's4_details',
            eventLabel: 'themesForindex-plugin'
        });
    
	[endif]
    ]]>
    </src>
</tool>
