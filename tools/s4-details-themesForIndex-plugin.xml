<?xml version="1.0" encoding="UTF-8"?>
<tool type="plugin">
    <requires>
    [if: ModuleDefined("s4") ]
    	<include src="[module:s4.dir]/tools/s4-requires.xml" nodes="/tool/requires/*" mustexist="true"/>
	[endif]
   </requires>
    <jssrc/>
    <src><![CDATA[
    [if: ModuleDefined("s4") ]
            if (_s4Params.indexsearcher && _s4Params.indexsearcher.enabled && _s4Params.themesearcher && _s4Params.themesearcher.enabled){
                
            	_s4Params.indexsearcher.searcher.addDetailHandlerDef({
            		"buttonText":  cbKort.getSession().getString('s4.themesearcher.themes'),
            		"buttonImage": Septima.Search.s4Icons.layersIconUri,
            		"handler": Septima.bind(function(result){
					    var promise = new Promise(function(resolve, reject){
	                        var themesResults = _s4Params.themesearcher.searcher.getThemesForDatasource(result.data.datasource).getResults();
	                        var items = [];
	                        for (var i=0;i<themesResults.length;i++){
	                           items.push({
	                               type: 'result',
	                               result: themesResults[i]
	                           });
	                        }
                            for (var i=0;i<themesResults.length;i++){
                                var themeGroupsForTheme = _s4Params.themesearcher.searcher.getThemeGroupsForTheme(themesResults[i]);
                                for (var g=0; g<themeGroupsForTheme.length; g++){
                                    var thisThemeGroup = themeGroupsForTheme[g];
                                    var detailItemsList = new Septima.Search.DetailItemsList({
                                        itemType: 'result',
                                        header: thisThemeGroup.displayname,
                                        image: Septima.Search.s4Icons.themeSearcher.themeGroupIconURI
                                    }); 

                                    var themesForThemeGroup = _s4Params.themesearcher.searcher.getThemesForThemeGroup(thisThemeGroup).getResults();
                                    for (var t=0; t<themesForThemeGroup.length; t++){
                                        var thisTheme = themesForThemeGroup[t];
                                        detailItemsList.append({
		                                   type: 'result',
		                                   result: thisTheme
                                        });
                                    }
                                    items.push(detailItemsList.asItem());
                                }
                            }
                            resolve(items);
					    });
					    return promise;
            		}, this),
            		isApplicable: Septima.bind(function(result){
            			var themesResults = _s4Params.themesearcher.searcher.getThemesForDatasource(result.data.datasource).getResults();
            			return themesResults.length > 0;
            		}, this),
            		getbuttonText: function(result){
            			var text = cbKort.getSession().getString('s4.themesearcher.themesrelated');
            			return text + " " + result.title;
            		}
            	});
            }
    
	[endif]
    ]]>
    </src>
</tool>
