<?xml version="1.0" encoding="UTF-8"?>
<tool type="plugin">
    <requires>
    [if: ModuleDefined("s4") ]
        <include src="[module:s4.dir]/tools/s4-requires.xml" nodes="/tool/requires/*" mustexist="true"/>
    [endif]
   </requires>
    <jssrc/>
    <src><![CDATA[
    [if: ModuleDefined("s4") ]
            if (_s4Params.themesearcher && _s4Params.themesearcher.enabled){
                _s4Params.themesearcher.searcher.addDetailHandlerDef({
                    "buttonText":  cbKort.getSession().getString('s4.themesearcher.tools'),
                    "buttonImage": Septima.Search.s4Icons.themeSearcher.toolsIconURI,
                    "more": true,
                    "handler": Septima.bind(function(result){
                        var promise = new Promise(function(resolve, reject){

                            setTimeout( ()=> {
                                var buttons = jQuery("<ul style='list-style: none'/>");
                                let prevIds = [];
                                for (var i=0;i<result.data.theme.actions.length;i++){
                                    
                                    var guiButton = result.data.theme.actions[i].getGuiButton(result.data.theme);
                                    var jButton = jQuery(guiButton.element).clone(true, true);
                                    //debugger
                                    let id = jButton.attr("id")

                                    if (id.indexOf('themeinfoAction') === -1 && prevIds.indexOf(id) === -1) {
                                        prevIds.push(id);
                                        jButton[0].addEventListener('click', function(action, theme, button) {
                                            action.fire(theme, button);
                                        }.bind(this, result.data.theme.actions[i], result.data.theme, guiButton));
                                        
                                        jButton.css("float", "left");
                                        jButton.css("list-style", "none");
                                        jButton.css("padding", "2px");
                                        jButton.css("margin", "1px");
                                        jButton.css({"cursor":"pointer"});
                                        buttons.append(jButton);
                                    }
                                }
                                var copyRightLink = result.searcher.getCopyRightLink(result);
                                if (copyRightLink !== null){
                                    copyRightLink.css("float", "left");
                                    copyRightLink.css("list-style", "none");
                                    copyRightLink.css("padding", "2px");
                                    copyRightLink.css("margin", "1px");
                                    buttons.append(copyRightLink);
                                }
                                resolve([{type: 'dom-object', object: buttons[0]}]);
                            }, 500);
                           
                        });

                        return promise;
                    }, this),
                    isApplicable: Septima.bind(function(result){
                        if (result.isNewQuery() || typeof result.data.theme.actions == 'undefined' || result.data.theme.actions.length == 0){
                            return false;
                        }else{
                            return true;
                        }
                    }, this)
                });
            }
    [endif]
    ]]>
    </src>
</tool>
