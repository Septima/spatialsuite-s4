<?xml version="1.0" encoding="UTF-8"?>
<tool type="plugin">
    <requires>
    [if: ModuleDefined("s4") ]
        <include src="[module:s4.dir]/tools/s4-requires.xml" nodes="/tool/requires/*" mustexist="true"/>
    [endif]
   </requires>
    <jssrc/>
    <src><![CDATA[
    [if: ModuleDefined("s4") ]
            if (_s4Params.themesearcher && _s4Params.themesearcher.enabled){
                _s4Params.themesearcher.searcher.addDetailHandlerDef({
                    "buttonText":  cbKort.getSession().getString('s4.themesearcher.relatedthemes'),
                    "buttonImage": Septima.Search.s4Icons.layersIconUri,
                    "handler": Septima.bind(function(result, detailsContent){
                        var promise = new Promise(function(resolve, reject){
                            var themeGroupsForTheme = _s4Params.themesearcher.searcher.getThemeGroupsForTheme(result);
                            var items = [];
                            var indentThemes = themeGroupsForTheme.length > 1;
                            for (var g=0; g<themeGroupsForTheme.length; g++){
                                var thisThemeGroup = themeGroupsForTheme[g];
                                if (indentThemes){
                                    items.push({type: "listheader", icon: Septima.Search.s4Icons.themeSearcher.themeGroupIconURI, title: thisThemeGroup.displayname});
                                }
                                var themesForThemeGroup = _s4Params.themesearcher.searcher.getThemesForThemeGroup(thisThemeGroup).getResults();
                                for (var t=0; t<themesForThemeGroup.length; t++){
                                    var thisTheme = themesForThemeGroup[t];
                                    var themeIcon = jQuery("<img src='" + thisTheme.image + "'/>");
                                    var title = jQuery("<span>" + thisTheme.title + "</span>");
                                    items.push({type: 'area', icon: themeIcon, value: title, result: thisTheme, clickable: true, isListItem: indentThemes});
                                }
                            }
                            resolve(items);
                        });
                        return promise;
                    }, this),
                    isApplicable: Septima.bind(function(result){
                        var themeGroupsForTheme = _s4Params.themesearcher.searcher.getThemeGroupsForTheme(result);
                        return themeGroupsForTheme.length > 0;
                    }, this),
                    getbuttonText: function(result){
                        var themeGroupsForTheme = _s4Params.themesearcher.searcher.getThemeGroupsForTheme(result);
                        var text = cbKort.getSession().getString('s4.themesearcher.relatedthemes');
                        if (themeGroupsForTheme.length === 1){
                            var thisThemeGroup = themeGroupsForTheme[0];
                            text = "Temagruppe " + thisThemeGroup.displayname;
                        }
                        return text;
                    },
                    getbuttonImage: function(result){
                        var themeGroupsForTheme = _s4Params.themesearcher.searcher.getThemeGroupsForTheme(result);
                        var img = Septima.Search.s4Icons.layersIconUri;
                        if (themeGroupsForTheme.length === 1){
                            img = Septima.Search.s4Icons.themeSearcher.themeGroupIconURI;
                        }
                        return img;
                    }
                });
            }
    [endif]
    ]]>
    </src>
</tool>
